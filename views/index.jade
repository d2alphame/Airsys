extends layout

block content
  .container-fluid.p-5
    div.alert.alert-danger#flightSearchAlertDanger(role="alert", style="display: none;")
    div.alert.alert-info#flightSearchAlertInfo(role="alert", style="display: none;")
    h1 Airsys
    p Welcome to Airsys - An Airline Reservation System
    form#booking(onsubmit="return false")
      .form-group
        label(for="from") From
        select.form-control#from(name="takeoffCity")
          each city in cities
            option= city
      .form-group
        label(for="to") To
        select.form-control#to(name="destinationCity")
          each city in cities
            option= city
      .form-group
        label(for="date") Date
        input.form-control#date(name="takeoffDate", type="date")
      button.btn.btn-primary(onclick="findFlights()") Find Flights
    .modal.fade#modalFlightsFound(tabindex="-1", role="dialog", aria-hidden="true")
      .modal-dialog.modal-lg(role="document")
        .modal-content
          .modal-header
            h5.modal-title Click on a Flight to Book
          .modal-body#flightsFound

  script.
    function findFlights() {
      
      let takeoffCity = document.getElementById("from").value
      let destinationCity = document.getElementById("to").value
      let takeoffDate = document.getElementById("date").value

      const url = `/flights/search?from=${takeoffCity}&to=${destinationCity}&date=${takeoffDate}`

      fetch(url)
      .then(res => res.json())
      .then(data => {
        if('error' in data) {
        // If the return message has the key 'error' in it that means there was an error

          // Alert that there is an error
          document.getElementById('flightSearchAlertDanger').innerHTML = data.error
          $('#flightSearchAlertDanger').show()
          setTimeout($('#flightSearchAlertDanger').hide, 3000)

          // Make the alert disappear after 3 seconds
          setTimeout(() => {
            $('#flightSearchAlertDanger').hide()
          }, 3000)
        }
        else if('message' in data) {
        // Alert if there's no such flight available
          document.getElementById('flightSearchAlertInfo').innerHTML = data.message
          $('#flightSearchAlertInfo').show();

          // Make the alert disappear after 3 seconds
          setTimeout(() => {
            $('#flightSearchAlertInfo').hide()
          }, 3000)

        }
        else {
        // If all goes well, display the flights for that day.
          let elem = document.createElement('ul')
          elem.classList.add('list-group')
          let fragment = document.createDocumentFragment()
          data.forEach((flight) => {
            var li = document.createElement('li')
            li.classList.add('list-group-item')
            li.textContent = `${processTakeoffDate(flight.takeoff_date)} ${processTakeoffTime(flight.takeoff_time) } ${flight.takeoff_city} to ${flight.destination_city}`
            fragment.appendChild(li)
          })
          elem.appendChild(fragment)
          document.getElementById('flightsFound').appendChild(elem)
          $('#modalFlightsFound').modal('show')
        }
        
      })
    }

    // Function to convert the date from yyyy-mm-dd to dd-MMM-yyyy
    function processTakeoffDate(takeoffDate) {
      const months = {
        "01": "Jan",
        "02": "Feb",
        "03": "Mar",
        "04": "Apr",
        "05": "May",
        "06": "Jun",
        "07": "Jul",
        "08": "Aug",
        "09": "Sep",
        "10": "Oct",
        "11": "Nov",
        "12": "Dec"
      }

      const dateElems = takeoffDate.split("-")
      return `${dateElems[2]}-${months[dateElems[1]]}-${dateElems[0]}`
    }


    // Function to convert takeoff time from 24hr clock to 12hr clock
    function processTakeoffTime(takeoffTime) {
      const timeElems = takeoffTime.split(":")
      var hr = parseInt(timeElems[0], 10)
      const am_pm = hr > 12 ? "pm" : "am"
      if(hr === 0) {
        hr = 12
      }
      else if(hr > 12) {
        hr -= 12
      }

      return `${hr}:${timeElems[1]}${am_pm}`
    }