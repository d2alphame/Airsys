extends layout

block content
  .container-fluid.p-5
    div.alert.alert-danger#flightSearchAlertDanger(role="alert", style="display: none;")
    div.alert.alert-info#flightSearchAlertInfo(role="alert", style="display: none;")
    div.alert.alert-success#flightSearchAlertSuccess(role="alert", style="display: none;")
    h1 Airsys
    p Welcome to Airsys - An Airline Reservation System
    form(onsubmit="return false")
      .form-group
        label(for="from") From
        select.form-control#from(name="takeoffCity")
          each city in cities
            option= city
      .form-group
        label(for="to") To
        select.form-control#to(name="destinationCity")
          each city in cities
            option= city
      .form-group
        label(for="date") Date
        input.form-control#date(name="takeoffDate", type="date")
      button.btn.btn-primary(onclick="findFlights()") Find Flights
    .modal.fade#modalFlightsFound(tabindex="-1", role="dialog", aria-hidden="true")
      .modal-dialog.modal-xl(role="document")
        .modal-content
          .modal-header
            h5.modal-title Click on a Flight to Book
          .modal-body#flightsFound
            .collapse#ticketInformation
              p.font-weight-bold.font-italics#ticketNumber<br />
              p.font-weight-bold.font-italics#flightNumber<br />
              p.font-weight-bold.font-italics#flightTimeAndDate<br />
              p.font-italic#ticketTakeoffLocation<br />
              p#flightDuration

            form.collapse#bookingForm(onsubmit="return false")
              .form-group
                label(for="firstName") Firstname
                input.form-control#firstName(name="firstName")
              .form-group
                label(for="lastName") Lastname
                input.form-control#lastName(name="lastName")
              .form-group
                label(for="middleName") Middle Name
                input.form-control#middleName(name="middleName")
              .form-group
                label(for="email") Email
                input.form-control#email(name="email", type="email")
              .form-group
                label(for="phone") Phone
                input.form-control#phone(name="phone", type="tel")
              button.btn.btn-primary(onclick="book()") Book Flight
  .container-fluid.p-5#TransferOfOwnership
    h2 Transfer Ownership of Ticket
    p Fill and submit this form to transfer ownership of your ticket
    form(onsubmit="return false")
      .form-group
        label(for="transferTicketNumber") Ticket Number
        input.form-control#transferTicketNumber(name="ticketNumber")
      .form-group
        label(for="ownersEmail") Your Email
        input.form-control#ownersEmail(name="ownersEmail")
      .form-group
        label(for="recipientsFirstName") The Recipient's Firstname
        input.form-control#recipientsFirstName(name="recipientsFirstName")
      .form-group
        label(for="recipientsLastName") The Recipient's Lastname
        input.form-control#recipientsLastName(name="recipientsLastName")
      .form-group
        label(for="recipientsMiddleName") The Recipient's Middlename
        input.form-control#recipientsMiddleName(name="recipientsMiddleName")
      .form-group
        label(for="recipientsEmail") The Recipient's Email
        input.form-control#recipientsEmail(name="recipientsEmail", type="email")
      .form-group
        label(for="recipientsPhone") The Recipient's Phone
        input.form-control#recipientsPhone(name="recipientsPhone", type="tel")
      button.btn.btn-primary(onclick="transfer()") Transfer Ownership
  
  script.

    // The flight number the user wants to book for
    var flightToBook
    
    const AlertType = {
      DANGER: 'danger',
      INFO: 'info',
      SUCCESS: 'success'
    }

    function findFlights() {
      
      let takeoffCity = document.getElementById("from").value
      let destinationCity = document.getElementById("to").value
      let takeoffDate = document.getElementById("date").value

      const url = `/flights/search?from=${takeoffCity}&to=${destinationCity}&date=${takeoffDate}`

      fetch(url)
      .then(res => res.json())
      .then(data => {
        if('error' in data) {
        // If the return message has the key 'error' in it that means there was an error

          // Alert that there is an error
          showAlert(AlertType.DANGER, data.error)
        }
        else if('message' in data) {
        // Alert if there's no such flight available
          showAlert(AlertType.INFO, data.message)

        }
        else {
        // If all goes well, display the flights for that day.
          let elem = document.createElement('ul')
          elem.setAttribute('id', 'flightList')
          elem.classList.add('list-group')
          let fragment = document.createDocumentFragment()
          data.forEach((flight) => {
            var btn = document.createElement('button')
            btn.classList.add('list-group-item', 'list-group-item-action')
            btn.textContent = `${processTakeoffDate(flight.takeoff_date)}, Take Off Time: ${processTakeoffTime(flight.takeoff_time)}, ${flight.takeoff_city} to ${flight.destination_city}`
            btn.setAttribute('data-flight-number', flight.flight_number)
            btn.setAttribute('onclick', 'bookFlight(this)')
            btn.setAttribute('data-toggle', 'collapse')
            btn.setAttribute('data-target', '#bookingForm')
            btn.setAttribute('aria-expanded', 'false')
            btn.setAttribute('aria-controls', 'bookingForm')
            fragment.appendChild(btn)
          })
          elem.appendChild(fragment)
          document.getElementById('flightsFound').appendChild(elem)
          $('#modalFlightsFound').modal('show')
        }
        
      })
    }

    // Function to convert the date from yyyy-mm-dd to dd-MMM-yyyy
    function processTakeoffDate(takeoffDate) {
      const months = {
        "01": "Jan",
        "02": "Feb",
        "03": "Mar",
        "04": "Apr",
        "05": "May",
        "06": "Jun",
        "07": "Jul",
        "08": "Aug",
        "09": "Sep",
        "10": "Oct",
        "11": "Nov",
        "12": "Dec"
      }

      const dateElems = takeoffDate.split("-")
      return `${dateElems[2]}-${months[dateElems[1]]}-${dateElems[0]}`
    }


    // Function to convert takeoff time from 24hr clock to 12hr clock
    function processTakeoffTime(takeoffTime) {
      const timeElems = takeoffTime.split(":")
      var hr = parseInt(timeElems[0], 10)
      const am_pm = hr > 12 ? "pm" : "am"
      if(hr === 0) {
        hr = 12
      }
      else if(hr > 12) {
        hr -= 12
      }

      return `${hr}:${timeElems[1]}${am_pm}`
    }


    // Function to book a flight
    function bookFlight(flight) {
      document.getElementById('flightList').remove()
      flightToBook = flight.getAttribute('data-flight-number')
    }


    // Actually book the flight
    function book() {
      let booking = {
        firstName: document.getElementById("firstName").value,
        lastName: document.getElementById("lastName").value,
        middleName: document.getElementById("middleName").value,
        email: document.getElementById("email").value,
        phone: document.getElementById("phone").value,
        flight: flightToBook
      }

      fetch('/bookings', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(booking)
      })
        .then(res => res.json())
        .then(data => {
          if('error' in data) {
            $('#modalFlightsFound').modal('hide')
            showAlert(AlertType.DANGER, data.error)
          }
          else if('message' in data) {
            $('#modalFlightsFound').modal('hide')
            showAlert(AlertType.INFO, data.message)
          }
          else {
            $('#bookingForm').collapse('toggle')            // Hide the booking form first
            // Show the ticket information received from the server
            document.getElementById('ticketNumber').innerHTML = `Ticket Number: ${data.bookingNumber}`
            document.getElementById('flightNumber').innerHTML = `Flight ${data.flight}, ${data.takeoffCity}` + ' - ' +  `${data.destinationCity}`
            document.getElementById('flightTimeAndDate').innerHTML = `Takes off ${processTakeoffDate(data.takeoffDate)}, at ${processTakeoffTime(data.takeoffTime)}`
            document.getElementById('ticketTakeoffLocation').innerHTML = `From ${data.takeoffAirport}, Terminal ${data.takeoffTerminal}`
            document.getElementById('flightDuration').innerHTML = `${data.flightDuration} hour flight`
            $('#ticketInformation').collapse('toggle')

            // $('#modalFlightsFound').modal('hide')           // Close the booking modal
            showAlert(AlertType.SUCCESS, 'Your flight has been booked. Check your email or phone for details')
          }
        })
    }


    // Function to display an alert.
    function showAlert(alertType, alertMessage) {

      var flightSearchAlertDanger = document.getElementById('flightSearchAlertDanger')
      var flightSearchAlertInfo = document.getElementById('flightSearchAlertInfo')
      var flightSearchAlertSuccess = document.getElementById('flightSearchAlertSuccess')

      switch(alertType) {
        case AlertType.DANGER:
          flightSearchAlertDanger.innerHTML = alertMessage
          $('#flightSearchAlertDanger').show()    // Show the alert
          // Make it disappear after 6 seconds
          setTimeout(() => {
            $('#flightSearchAlertDanger').hide()
          }, 6000)
          break;
       
        case AlertType.INFO:
          flightSearchAlertInfo.innerHTML = alertMessage
          $('#flightSearchAlertInfo').show()    // Show the alert
          // Make it disappear after 6 seconds
          setTimeout(() => {
            $('#flightSearchAlertInfo').hide()
          }, 6000)
          break;

        case AlertType.SUCCESS:
          flightSearchAlertSuccess.innerHTML = alertMessage
          $('#flightSearchAlertSuccess').show()    // Show the alert
          // Make it disappear after 6 seconds
          setTimeout(() => {
            $('#flightSearchAlertSuccess').hide()
          }, 6000)
      }
    }

    // Function to transfer ownership of a ticket
    function transfer() {

      let transferData = {
        ticket: document.getElementById("transferTicketNumber").value,
        ownersEmail: document.getElementById("ownersEmail").value,
        recipientsFirstName: document.getElementById("recipientsFirstName").value,
        recipientsLastName: document.getElementById("recipientsLastName").value,
        recipientsMiddleName: document.getElementById("recipientsMiddleName").value,
        recipientsEmail: document.getElementById("recipientsEmail").value,
        recipientsPhone: document.getElementById("recipientsPhone").value
      }

      fetch('/bookings/transfer', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(transferData)
      })
      .then(res => res.json())
      .then(data => {
        if('error' in data) {
          showAlert(AlertType.DANGER, data.error)
        }
        else if('message' in data) {
          showAlert(AlertType.INFO, data.message)
        }
        else {
          window.scrollTo(0, 0)
          showAlert(AlertType.SUCCESS, data.success)
        }
      })
    }