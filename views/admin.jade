extends layout

block content
	.container-fluid.p-5
		h1.mb-5 Airsys Admin
		ul.nav.nav-pills#tabNav(role="tablist")
			li.nav-item(role="presentation")
				a.nav-link.active#allFlightsTab(data-toggle="tab", href="#allFlights", role="tab", aria-controls="allFlights", aria-selected="true") All Flights
			li.nav-item(role="presentation")
				a.nav-link#allBookingsTab(data-toggle="tab", href="#allBookings", role="tab", aria-controls="allBookings", aria-selected="false") All Bookings
		.tab-content#allContent
			.tab-pane.fade.show.active#allFlights(role="tabpanel", aria-labelledby="allFlightsTab")
				.list-group.mt-5
					each flight in flights
						.list.group-item.flex-column.align-items-start.mb-5
							p.font-weight-bold.font-italic #{flight.takeoffCity} to #{flight.destinationCity} on #{flight.takeoffDate} at #{flight.takeoffTime}
							p.font-weight-bold.font-italic From #{flight.takeoffAirport} Terminal #{flight.takeoffTerminal}
							p.font-italic Flight number #{flight.flightNumber}, #{flight.flightDuration} hours	

			.tab-pane.fade#allBookings(role="tabpanel", aria-labelledby="allBookingsTab")
				.list-group.mt-5
					each booking in bookings
						.list.group.flex-column.align-items-start.mb-5
							p.font-weight-bold.font-italic Ticket Number #{booking.bookingNumber}
							p.font-weight-bold.font-italic #{booking.takeoffCity} - #{booking.destinationCity}: #{booking.takeoffDate}
							p #{booking.firstName} #{booking.lastName} #{booking.middleName}
							p.font-italic #{booking.email} #{booking.phone}
	script.

		// Function to convert the date from yyyy-mm-dd to dd-MMM-yyyy
		function processTakeoffDate(takeoffDate) {
			const months = {
				"01": "Jan",
				"02": "Feb",
				"03": "Mar",
				"04": "Apr",
				"05": "May",
				"06": "Jun",
				"07": "Jul",
				"08": "Aug",
				"09": "Sep",
				"10": "Oct",
				"11": "Nov",
				"12": "Dec"
			}
			const dateElems = takeoffDate.split("-")
			return `${dateElems[2]}-${months[dateElems[1]]}-${dateElems[0]}`
		}


		// Function to convert takeoff time from 24hr clock to 12hr clock
		function processTakeoffTime(takeoffTime) {
			const timeElems = takeoffTime.split(":")
			var hr = parseInt(timeElems[0], 10)
			const am_pm = hr > 12 ? "pm" : "am"
			if(hr === 0) {
			  hr = 12
			}
			else if(hr > 12) {
			  hr -= 12
			}	
			return `${hr}:${timeElems[1]}${am_pm}`
		}